---
- hosts: auth_servers
  vars:
    domain_name: test.org
  remote_user: root
  tasks:

  - name: ensure postgresql-9.4 is at the latest version
    apt: pkg=postgresql-9.4 state=latest
    tags:
      - powerdns
      - pki
  - name: ensure pip is at the latest version
    apt: pkg=python-pip state=latest
    tags:
      - pki
  - name: ensure python-dev is at the latest version
    apt: pkg=python-dev state=latest
    tags:
      - pki
  - name: ensure libldap2-dev is at the latest version
    apt: pkg=libldap2-dev state=latest
    tags:
      - pki
  - name: ensure libsasl2-dev is at the latest version
    apt: pkg=libsasl2-dev
    tags:
      - pki
  - name: ensure libpq-dev is at the latest version
    apt: pkg=libpq-dev
    tags:
      - pki
  - name: ensure postgresql-client is at the latest version
    apt: pkg=postgresql-client
    tags:
      - pki
  - name: create penatesserver user
    user: name=penatesserver home=/var/penatesserver createhome=yes
    tags:
      - pki
  - pip: name=djangofloor
    tags:
      - pki
  - pip: name=djangorestframework
    tags:
      - pki
  - pip: name=markdown
    tags:
      - pki
  - pip: name=django-filter
    tags:
      - pki
  - pip: name=psycopg2
    tags:
      - pki
  - pip: name=pygments
    tags:
      - pki
  - pip: name=django-ldapdb
    tags:
      - pki
  - git: repo=https://github.com/d9pouces/Penates-Server.git
         dest=/var/penatesserver/src
         update=yes
    tags:
      - pki
  - shell: python setup.py develop
    args:
      chdir: /var/penatesserver/src
    tags:
      - pki
  - file: path=/var/penatesserver/data/pki/private state=directory owner=penatesserver
    tags:
      - pki
  - file: path=/var/penatesserver/data/static state=directory owner=penatesserver
    tags:
      - pki
  - file: path=/var/penatesserver/data/log state=directory owner=penatesserver
    tags:
      - pki
  - file: path=/var/penatesserver/data/data/media state=directory owner=penatesserver
    tags:
      - pki
  - file: path=/etc/penatesserver/ state=directory owner=penatesserver
    tags:
      - pki
  - copy: src=files/auth_servers/ca_cert.pem dest=/var/penatesserver/data/pki/cacert.pem owner=penatesserver mode=0644 group=penatesserver
    tags:
      - pki
  - copy: src=files/auth_servers/ca_key.pem dest=/var/penatesserver/data/pki/private/cakey.pem owner=penatesserver mode=0600 group=penatesserver
    tags:
      - pki
  - postgresql_user: name=penatesserver password={{ penatesserver_password }} role_attr_flags=NOSUPERUSER
    name: create database user for PenatesServer
    sudo_user: postgres
    tags:
      - pki
  - postgresql_db: name=penatesserver owner=penatesserver encoding='UTF-8' lc_collate='fr_FR.UTF-8' lc_ctype='fr_FR.UTF-8'
    name: create database for PenatesServer
    sudo_user: postgres
    tags:
      - pki
  - name: copy PenatesServer configuration
    template: src=templates/auth_servers/penatesserver.ini dest=/etc/penatesserver/settings.ini owner=penatesserver group=penatesserver mode=0644
    tags:
      - pki
  - name: initialize PKI
    command: penatesserver-manage certificate --initialize {{ penates_domain }} CA
    sudo_user: penatesserver
    tags:
      - pki
  - name: prepare PKI database
    command: penatesserver-manage migrate
    sudo_user: penatesserver
    tags:
      - pki

  - name: ensure OpenLDAP is at the latest version
    apt: pkg=slapd state=latest
    tags:
      - ldap
  - name: ensure LDAP-Utils is at the latest version
    apt: pkg=ldap-utils state=latest
    tags:
      - ldap
  - name: ensure isc-dhcp-server-ldap is at the latest version
    apt: pkg=isc-dhcp-server-ldap state=latest
    tags:
      - ldap
  - name: copy kerberos.ldif
    copy: src=files/auth_servers/kerberos.ldif dest=/etc/ldap/schema/kerberos.ldif
    tags:
      - kerberos
  - name: copy dhcp.ldif
    copy: src=files/auth_servers/dhcp.ldif dest=/etc/ldap/schema/dhcp.ldif
    tags:
      - ldap
  - name: copy samba.ldif
    copy: src=files/auth_servers/samba.ldif dest=/etc/ldap/schema/samba.ldif
    tags:
      - ldap
  - name: copy base OpenLDAP configuration
    template: src=templates/auth_servers/openldap_config.ldif dest=/etc/ldap/config.ldif
    tags:
      - ldap
  - name: register LDAP service
    command: penatesserver-manage service ldaps {{ penates_directory_fqdn }} 636 --fqdn {{ penates_directory_fqdn }} --description "Main LDAP server" --cert /etc/ldap/slapd.d/{{ penates_directory_fqdn }}.crt --key /etc/ldap/slapd.d/{{ penates_directory_fqdn }}.key
    tags:
      - ldap
  - name: copy OpenLDAP base content
    template: src=templates/auth_servers/openldap_base.ldif dest=/etc/ldap/base.ldif
    tags:
      - ldap
  - name: import cosine.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/cosine.ldif | true
    tags:
      - ldap
  - name: import nis.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/nis.ldif | true
    tags:
      - ldap
  - name: import inetorgperson.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/inetorgperson.ldif | true
    tags:
      - ldap
  - name: import kerberos.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/kerberos.ldif | true
    tags:
      - ldap
  - name: import samba.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/samba.ldif | true
    tags:
      - ldap
  - name: import dhcp.ldif
    shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/dhcp.ldif | true
    tags:
      - ldap
  - name: import base data
    shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f /etc/ldap/config.ldif
    tags:
      - ldap
  - name: import configuration
    shell: ldapadd -c -x -D cn=admin,{{ penates_domain|hostname_to_dn }} -w {{ ldap_root_password }} -H ldapi:///  -f /etc/ldap/base.ldif | true
    tags:
      - ldap
  - name: open TCP port for LDAP
    ufw: rule=allow port=636 proto=tcp
    tags:
      - ldap
  - file: path=/etc/ldap/config.ldif state=absent
    tags:
      - ldap
  - file: path=/etc/ldap/base.ldif state=absent
    tags:
      - ldap
  - file: path=/etc/ldap/slapd.d/{{ penates_directory_fqdn }}.key state=file owner=openldap mode=0400 group=openldap
    tags:
      - ldap
  - lineinfile: regexp='SLAPD_SERVICES="ldap:/// ldapi:///"' line='SLAPD_SERVICES="ldap:/// ldapi:/// ldaps:///"' dest=/etc/default/slapd
    tags:
      - ldap
  - name: restart OpenLDAP
    service: name=slapd state=restarted
    tags:
      - ldap

  - name: ensure krb5-kdc-ldap is at the latest version
    apt: pkg=krb5-kdc-ldap state=latest
    tags:
      - kerberos
  - name: ensure krb5-kdc is at the latest version
    apt: pkg=krb5-kdc state=latest
    tags:
      - kerberos
  - name: ensure krb5-admin-server is at the latest version
    apt: pkg=krb5-admin-server state=latest
    tags:
      - kerberos
  - name: copy Kerberos LDAP password
    template: src=templates/auth_servers/service.keyfile dest=/etc/krb5kdc/service.keyfile
    tags:
      - kerberos
  - name: register Kerberos service
    command: penatesserver-manage service krb {{ penates_directory_fqdn }} 88 --role "Kerberos DC" --fqdn {{ penates_directory_fqdn }} --description "Main Kerberos server" --cert /etc/krb5kdc/{{ penates_directory_fqdn }}.crt --key /etc/krb5kdc/{{ penates_directory_fqdn }}.key
    tags:
      - kerberos
  - name: copy Kerberos configuration
    template: src=templates/auth_servers/kdc.conf dest=/etc/krb5kdc/kdc.conf
    tags:
      - kerberos
  - name: copy Kerberos admin
    template: src=templates/auth_servers/kadm5.acl dest=/etc/krb5kdc/kadm5.acl
    tags:
      - kerberos
  - name: configure LDAP for Kerberos
    shell: kdb5_ldap_util -D cn=admin,{{ penates_domain|hostname_to_dn }} -w {{ ldap_root_password }} -H ldapi:/// create -subtrees cn=krbContainer,{{ penates_domain|hostname_to_dn }} -r {{ penates_domain|upper }} -P {{ kerberos_master_password }} -s | true
    tags:
      - kerberos
  - name: restart Kerberos admin
    service: name=krb5-admin-server state=restarted
    tags:
      - kerberos
  - name: restart Kerberos
    service: name=krb5-kdc state=restarted
    tags:
      - kerberos
  - name: open TCP port for Kerberos
    ufw: rule=allow port=88 proto=tcp
    tags:
      - kerberos
  - name: open UDP port for Kerberos
    ufw: rule=allow port=88 proto=udp
    tags:
      - kerberos
  - name: open TCP port for Kerberos admin
    ufw: rule=allow port=749 proto=tcp
    tags:
      - kerberos
  - name: create Kerberos admin principal for PenatesServer
    command: penatesserver-manage keytab penatesserver/admin
    tags:
      - pki
      - kerberos
  - name: remove keytab for PenatesServer
    file: path=/var/penatesserver/data/pki/private/kadmin.keytab state=absent
    tags:
      - pki
      - kerberos

  - name: export to keytab for PenatesServer
    command: kadmin.local -q "ktadd -k /var/penatesserver/data/pki/private/kadmin.keytab penatesserver/admin"
    tags:
      - pki
      - kerberos

  - name: ensure isc-dhcp-server is at the latest version
    apt: pkg=isc-dhcp-server state=latest
    tags:
      - dhcp
  - name: copy isc-dhcpd configuration
    template: src=templates/auth_servers/dhcpd.conf dest=/etc/dhcp/dhcpd.conf
    tags:
      - dhcp
  - name: restart isc-dhcpd
    service: name=isc-dhcp-server state=restarted
    tags:
      - dhcp
  - name: restart isc-dhcpd6
    service: name=isc-dhcp-server6 state=restarted
    tags:
      - dhcp
  - name: open UDP port for DHCP
    ufw: rule=allow port=67 proto=udp
    tags:
      - dhcp
  - name: register DHCP service
    command: penatesserver-manage service dhcp {{ penates_directory_fqdn }} 67 --role "Service" --fqdn {{ penates_directory_fqdn }} --description "Main DHCP server"
    tags:
      - dhcp

  - apt: pkg=apache2
    tags:
      - pki
  - apt: pkg=libapache2-mod-xsendfile
    tags:
      - pki
  - apt: pkg=libapache2-mod-auth-kerb
    tags:
      - pki
  - apache2_module: state=present name=auth_kerb
    tags:
      - pki
  - apache2_module: state=present name=headers
    tags:
      - pki
  - apache2_module: state=present name=proxy
    tags:
      - pki
  - apache2_module: state=present name=proxy_http
    tags:
      - pki
  - apache2_module: state=present name=ssl
    tags:
      - pki
  - command: penatesserver-manage collectstatic --noinput
    sudo_user: penatesserver
    tags:
      - pki
  - name: register HTTP service
    command: penatesserver-manage service https {{ penates_directory_fqdn }} 443 --role "Service" --fqdn {{ penates_directory_fqdn }} --description "Penates Webservices" --kerberos_service HTTP --keytab /etc/apache2/http.keytab --cert /etc/apache2/{{ penates_directory_fqdn }}.pem --key /etc/apache2/{{ penates_directory_fqdn }}.pem --ca /etc/apache2/{{ penates_directory_fqdn }}.pem
    tags:
      - pki
  - file: path=/var/penatesserver/data state=directory owner=penatesserver recurse=yes group=penatesserver
    tags:
      - pki
  - file: path=/etc/apache2/http.keytab state=file owner=www-data group=www-data mode=0600
    tags:
      - pki
  - file: path=/etc/apache2/{{ penates_directory_fqdn }}.pem state=file owner=www-data group=www-data mode=0600
    tags:
      - pki
  - template: src=templates/auth_servers/penatesserver.conf dest=/etc/apache2/sites-available/{{ penates_directory_fqdn }}.conf owner=www-data group=www-data mode=0644
    tags:
      - pki
  - file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
    tags:
      - pki
  - file: path=/etc/apache2/sites-enabled/000-default state=absent
    tags:
      - pki
  - file: path=/etc/apache2/sites-enabled/{{ penates_directory_fqdn }}.conf src=/etc/apache2/sites-available/{{ penates_directory_fqdn }}.conf state=link
    tags:
      - pki
  - name: copy penatesserver systemd configuration
    template: src=templates/auth_servers/penatesserver-systemd.service dest=/etc/systemd/system/penatesserver-gunicorn.service
    tags:
      - pki
  - service: name=apache2 state=restarted
    tags:
      - pki

  - copy: src=files/auth_servers/powerdns.sql dest=/tmp/powerdns.sql
    tags:
      - powerdns
  - postgresql_user: name=powerdns password={{ powerdns_password }} role_attr_flags=NOSUPERUSER
    name: create database user for powerdns
    sudo_user: postgres
    tags:
      - powerdns
  - postgresql_db: name=powerdns owner=powerdns encoding='UTF-8' lc_collate='fr_FR.UTF-8' lc_ctype='fr_FR.UTF-8'
    name: create database for powerdns
    sudo_user: postgres
    tags:
      - powerdns
  - command: psql -d powerdns -X -h localhost -p 5432 -U powerdns -w -f /tmp/powerdns.sql
    environment:
      PGPASSWORD: {{ powerdns_password }}
    tags:
      - powerdns
  - file: path=/tmp/powerdns.sql state=absent
    tags:
      - powerdns
  - apt: pkg=pdns-backend-pgsql state=latest
    tags:
      - powerdns
  - apt: pkg=dnsutils state=latest
    tags:
      - powerdns
  - apt: pkg=pdns-server state=latest
    tags:
      - powerdns
  - apt: pkg=pdns-recursor state=latest
    tags:
      - powerdns
  - template: src=templates/auth_servers/pdns.conf dest=/etc/powerdns/pdns.conf owner=powerdns group=powerdns mode=0644
    tags:
      - powerdns
  - template: src=templates/auth_servers/recursor.conf dest=/etc/powerdns/recursor.conf owner=powerdns group=powerdns mode=0644
    tags:
      - powerdns
  - service: name=pdns state=restarted
    tags:
      - powerdns
  - service: name=pdns-recursor state=restarted
    tags:
      - powerdns
