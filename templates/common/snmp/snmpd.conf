#  Listen for connections from the local system only
# agentAddress  udp:127.0.0.1:161
#  Listen for connections on all interfaces (both IPv4 *and* IPv6)
{% if network_config|ifcache('admin', 2) %}
agentAddress udp{% if network_config|ifcache('admin', 3) == 6 %}6{% endif %}:{{ network_config|ifcache('admin', 2) }}:161
{% else %}
agentAddress udp::161,udp6::161
{% endif %}

###############################################################################
#
#  ACCESS CONTROL
#
view   systemonly  included   .1.3.6.1.2.1.1
view   systemonly  included   .1.3.6.1.2.1.25.1
rouser   penates
createUser penates SHA {{ penates_snmpd_password }} AES {{ penates_snmpd_aes_password }}
#  It's no longer typically necessary to use the full 'com2sec/group/access' configuration
#  r[ow]user and r[ow]community, together with suitable views, should cover most requirements

# serverCert /etc/ssl/private/admin.pem
# tlsAlgorithms HIGH
# trustCert /etc/ssl/certs/Penates_Hosts.pem


sysLocation         {{ penates_locality }}, {{ penates_state }}
sysContact          {{ penates_admin_name }} <security@{{ penates_domain }}>
sysServices         72
                               # At least one  'mountd' process
# proc  mountd
                               # No more than 4 'ntalkd' processes - 0 is OK
# proc  ntalkd    4
                               # At least one 'sendmail' process, but no more than 10
# proc  sendmail 10 1
includeAllDisks     10%
load                12 10 5
swap                100MB


###############################################################################
#
#  ACTIVE MONITORING
#

                                    #   send SNMPv1  traps
trapsink     localhost public
                                    #   send SNMPv2c traps
#trap2sink    localhost public
                                    #   send SNMPv2c INFORMs
#informsink   localhost public

#  Note that you typically only want *one* of these three lines
#  Uncommenting two (or all three) will result in multiple copies of each notification.


#
#  Event MIB - automatically generate alerts
#
                                   # Remember to activate the 'createUser' lines above
iquerySecName   internalUser
                                   # generate traps on UCD error conditions
defaultMonitors          yes
                                   # generate traps on linkUp/Down
linkUpDownNotifications  yes



###############################################################################
#
#  EXTENDING THE AGENT
#

#
#  Arbitrary extension commands
#
 extend    test1   /bin/echo  Hello, world!
 extend-sh test2   echo Hello, world! ; echo Hi there ; exit 35
#extend-sh test3   /bin/sh /tmp/shtest

#  Note that this last entry requires the script '/tmp/shtest' to be created first,
#    containing the same three shell commands, before the line is uncommented

#  Walk the NET-SNMP-EXTEND-MIB tables (nsExtendConfigTable, nsExtendOutput1Table
#     and nsExtendOutput2Table) to see the resulting output

#  Note that the "extend" directive supercedes the previous "exec" and "sh" directives
#  However, walking the UCD-SNMP-MIB::extTable should still returns the same output,
#     as well as the fuller results in the above tables.


#
#  "Pass-through" MIB extension command
#
#pass .1.3.6.1.4.1.8072.2.255  /bin/sh       PREFIX/local/passtest
#pass .1.3.6.1.4.1.8072.2.255  /usr/bin/perl PREFIX/local/passtest.pl

# Note that this requires one of the two 'passtest' scripts to be installed first,
#    before the appropriate line is uncommented.
# These scripts can be found in the 'local' directory of the source distribution,
#     and are not installed automatically.

#  Walk the NET-SNMP-PASS-MIB::netSnmpPassExamples subtree to see the resulting output


#
#  AgentX Sub-agents
#
                                           #  Run as an AgentX master agent
 master          agentx
                                           #  Listen for network connections (from localhost)
                                           #    rather than the default named socket /var/agentx/master
#agentXSocket    tcp:localhost:705
